#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Attack 3"]
#Text[""] 
#include "script/default_system/Default_ShotConst.txt"
#include "./functions/CustomShotFunctions.dnh"
#include "./functions/MathFunctions.dnh"
#include "./BlueSoul_Const.dnh"
#include "./functions/RenderFunctions.dnh"

let objEnemy;
let frame = 0;
let difficulty;

let px;
let py;

let w;
let h;

let ex;
let ey;

let cx;
let cy;

@Event
{
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)
	{
		SetScriptResult(34000);
	}
	case(EV_REQUEST_TIMER)
	{
		SetScriptResult(75);
	}
}
@Initialize
{
	difficulty = GetCommonData("Difficulty", -1);

	objEnemy = ObjEnemy_Create(OBJ_ENEMY_BOSS);
	ObjEnemy_Regist(objEnemy);

	let imgExRumia = GetCurrentScriptDirectory() ~ "/img/blue_heart.png";
	ObjPrim_SetTexture(objEnemy, imgExRumia); 

	ObjSprite2D_SetSourceRect(objEnemy, 0, 0, 16, 16); 
	ObjSprite2D_SetDestCenter(objEnemy); 
	ObjRender_SetBlendType(objEnemy, BLEND_ALPHA);
	Obj_SetRenderPriority(objEnemy, 0.8);

	let cx = GetStgFrameWidth() / 2;

	ObjMove_SetX(objEnemy, cx);
	ObjMove_SetY(objEnemy, 90);
	
	Curtain();
	Flies();
}

@MainLoop
{

	frame++;

	px = GetPlayerX();
	py = GetPlayerY();

	w = GetStgFrameWidth();
	h = GetStgFrameHeight();

	ex = ObjMove_GetX(objEnemy);
	ey = ObjMove_GetY(objEnemy);
	
	cx = w / 2;
	cy = h / 2;
	
	ObjEnemy_SetIntersectionCircleToShot(objEnemy, ex, ey, 32);
	ObjEnemy_SetIntersectionCircleToPlayer(objEnemy, ex, ey, 24);

	if(ObjEnemy_GetInfo(objEnemy, INFO_LIFE) <= 0)
	{
		Obj_Delete(objEnemy);
		CloseScript(GetOwnScriptID());
		return;
	}
	
	RenderHeart(w/2,h/2);
	
	yield;
}

task Flies()
{
	let period = 10;
	let speed = 3.5;
	let count = 10;
	let homing_speed = 2.4 + difficulty * 0.2;

	Wait(10);

	loop(4)
	{
		loop(count)
		{
			let bullet = CreateShotA1(ex, ey, speed, GetAngleToPlayer(objEnemy), CS_FLY, 15);
			let time = Distance(ObjMove_GetX(objEnemy), ObjMove_GetY(objEnemy), GetPlayerX(), GetPlayerY()) / speed;

			PlaySound("Shot4", 15, 40);

			SetFlyHoming(bullet, time, 10, 4, homing_speed, 30);

			Wait(period);
		}

		Wait(160);
	}

	Wait(60);
	Bursts();
}

function Needle(x, y)
{
	let angle = AngleTo(x, y, px, py);
	let speed = 3.5 + difficulty * 0.5;
	let amount = 5;
	let delay = 10;
	let delay_inc = 4;

	PlaySound("famdie", delay, 40);

	loop(amount)
	{
		CreateShotA1(x, y, speed, angle, CS_SMALL_BUTTERFLY, delay);
		delay += delay_inc;
	}
}

function Burst(x, y, delay)
{
	let threads = 9 + difficulty * 3;
	let threads2 = 18 + difficulty * 6;
	let graphic = CS_LARGE_BUTTERFLY;
	let graphic2 = CS_SMALL_BUTTERFLY;
	let speed = 2.7;
	let speed2 = 1.7;

	Wait(delay);

	PlaySound("water", 30, 50);

	ShootThreads(threads, x, y, speed, rand(0, 360), graphic, 30);
	ShootThreads(threads2, x, y, speed2, rand(0, 360), graphic2, 30);
	Needle(x, y);
}

task Bursts()
{
	let count = 6;

	let width = w / (count + 1);
	let x = width;

	loop(count)
	{
		Burst(x + rand(-0.2, 0.2) * width, ey + rand(-40, 40), 0);

		x += width;

		Wait(30);
	}

	Wait(140);

	let count2 = 3;
	let width2 = w / (count2 * 2 + 2);

	let i = 0;
	loop(count2)
	{
		Burst(ex + i * width2, ey, 0);
		Burst(ex - i * width2, ey, 0);

		i++;
		Wait(30);
	}

	Wait(140);

	let count3 = 3;
	let width3 = w / (count3 * 2 + 2);

	i = 0;
	loop(count3)
	{
		Burst(ex + i * width3, ey + i * width3, 0);
		Burst(ex - i * width3, ey + i * width3, 0);

		i++;
		Wait(30);
	}

	Wait(180);

	Flies();
}

task Curtain()
{
	let count = 8 + difficulty * 2;
	let period = 35;
	let speed = 2;
	let speed_diff = 1;
	let graphic = CS_LARGE_BUTTERFLY;
	
	Wait(10);

	while(true)
	{
		let width = w / (count - 1);
		let x = 0;

		let i = 0;
		loop(count)
		{
			if(i % 2 == 0)
			{
				speed += speed_diff;
			}
			else
			{
				speed -= speed_diff;
			}

			CreateShotA1(x, 0, speed, 90, graphic, 30);

			PlaySound("BulletWave", 30, 60);

			x += width;
			i++;
		}

		Wait(period);
	}
}